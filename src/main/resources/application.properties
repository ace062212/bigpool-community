# 기본 프로필 설정
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# 서버 설정
server.port=${PORT:8080}
server.address=0.0.0.0

# Spring Security 설정
spring.security.headers.frame-options.mode=SAMEORIGIN

# 타임리프 설정
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false

# 정적 리소스 설정
spring.web.resources.static-locations=classpath:/static/
# 개발 환경에서는 캐시 기간을 0으로 설정, 프로덕션 환경에서는 아래 값을 사용
spring.web.resources.cache.period=31536000
spring.web.resources.chain.cache=true
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.fixed.enabled=true
spring.web.resources.chain.strategy.fixed.paths=/**
spring.web.resources.chain.strategy.fixed.version=v1

# HTTP 응답 압축 설정
server.compression.enabled=true
server.compression.min-response-size=1024
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml

# 서버 연결 설정 최적화
server.tomcat.max-connections=10000
server.tomcat.max-threads=200
server.tomcat.accept-count=100
server.tomcat.connection-timeout=3000

# HTTP/2 활성화 (스프링 부트 2.1 이상에서 지원)
server.http2.enabled=true

# 파일 업로드 설정
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.resolve-lazily=true

# 파일 업로드 디렉토리 설정 - 환경 변수 또는 기본값 사용
file.upload-dir=${UPLOAD_DIR:/var/www/bigpool/uploads}

# 로깅 수준 조정
logging.level.org.springframework.web=INFO
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=INFO
logging.level.org.springframework.web.servlet.resource=INFO
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.com.community=debug

# 시간대 설정 (한국 시간)
spring.jackson.time-zone=Asia/Seoul
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

# H2 데이터베이스 설정
spring.datasource.url=jdbc:h2:file:./h2db/community
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 콘솔 설정
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# 캐시 설정
spring.cache.type=caffeine
spring.cache.cache-names=posts,users
spring.cache.caffeine.spec=maximumSize=500,expireAfterAccess=600s

# 세션 설정
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
server.servlet.session.timeout=30m

# 클라우드 스토리지 설정 - AWS S3 (production 프로필에서 사용) - 현재는 사용하지 않음
# 이 값들은 Railway 환경 변수로 설정해야 합니다
# cloud.aws.credentials.access-key=${AWS_ACCESS_KEY:your-access-key}
# cloud.aws.credentials.secret-key=${AWS_SECRET_KEY:your-secret-key}
# cloud.aws.region.static=${AWS_REGION:ap-northeast-2}
# cloud.aws.s3.bucket=${AWS_S3_BUCKET:your-bucket-name}
# cloud.aws.stack.auto=false

# Firebase Storage 설정
firebase.storage.bucket=bigpool-community.firebasestorage.app

# 개발 환경용 서비스 계정 경로 (로컬에서만 사용)
firebase.service-account.path=/Users/pdg0622/Downloads/bigpool-community-firebase-adminsdk-fbsvc-184c969c39.json

# 배포 환경용 인코딩된 자격 증명 (Railway에서 환경변수로 설정)
firebase.credentials.encoded=${FIREBASE_CREDENTIALS:}
